import React from 'react';
import Head from 'next/head'
import { useSession, signIn, signOut } from 'next-auth/client'
import styles from '../styles/Home.module.css'
import { useEffect, useState } from 'react';


export default function Home() {
  const [session] = useSession();
  const [canEdit, setCanEdit] = useState(true);
  const [title, setTitle] = useState(null);
  const [imageUrl, setImageUrl] = useState(null);
  const [info, setInfo] = useState([]);


  // useEffect(() => {
  //   if (session) {
  //     setCanEdit(true);
  //   }
  //   else {
  //     setCanEdit(false);
  //   }
  // }, [session]);


  async function handleUpdateInfo(item) {
    await fetch('/api/data', {
      method: 'PUT',
      headers: {
        'Accept': 'application/json, text/plain, */*',
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        id: item.id,
        text: title? title : item.text,
        image: imageUrl? imageUrl : item.image,
      }),
    }).then(async (res) => {
      if (res.status === 200) {
        await getInfo();
        alert('Atualizado com successo!');
      }
      else {
        console.log(e);
        alert('Erro ao atualizar status :(');
      }
    })
  }


  async function getInfo() {

    await fetch('/api/data', {
      method: 'GET',
      headers: {
        'Accept': 'application/json, text/plain, */*',
        'Content-Type': 'application/json'
      }
    }).then(async (res) => {
      const response = await res.json();
      setInfo(response.data);
    })

  }

  useEffect(async () => {
    await getInfo();
  }, [session]);

  async function handleUploadImage(file){
    const formData = new FormData();
    formData.append('image', file);
    console.log(formData);
    console.log(file);
    await fetch('https://api.imgur.com/3/image', {
      method: 'post',
      headers: {
        Authorization: "Client-ID b234bda60e00570"
      },
      body: formData,
    }).then(data => data.json()).then(data => {
      setImageUrl(data.data.link);
      console.log(data.data.link);
    })
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Editable</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      

      <main className={styles.main}>
        <h1 className={styles.title}>
          Item edit√°vel
        </h1>

        {session &&
          <div className={styles.login}>
            <div className={styles.loginProfile}>
              <img src={session.user.image} alt="Imagem de perfil" style={{ height: 40, borderRadius: 20 }} />
              <h2 style={{ fontSize: '14px' }}>{session.user.name}</h2>
            </div>
            <p onClick={() => signOut()} className={styles.sair}>Sair</p>
            <button onClick={() => handleUpdateInfo(info[0])}>Atualizar Dados</button>
          </div>}

        {!session &&
          <div onClick={() => signIn("google")} className={styles.logout}>
            <p>Entrar</p>
          </div>}

        {info?.map((item, index) => {
            return(
              <div key={index}>
                
                <h1 
                  contentEditable={canEdit}
                  suppressContentEditableWarning={true}
                  onInput={e => setTitle(e.currentTarget.textContent)}
                >
                  {item.text}
                </h1>
                <img src={imageUrl? imageUrl : item.image} alt="imagem" width="250px"/>
                {canEdit && <input type="file" id="image" onChange={(e) => handleUploadImage(e.target.files[0])}/>}
              </div>
            )
        })}
        <button onClick={() => handleUpdateInfo(info[0])}>Atualizar Dados</button>
      </main>
    </div>
  )
}
